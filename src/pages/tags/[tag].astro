---
import slugify from "slugify";
import { SITE } from '../../config';
import BaseLayout from '../../layouts/BaseLayout.astro';
import PostPreview from '../../components/PostPreview.astro';
import authorData from '../../data/authors.json';

export async function getStaticPaths() {
	const allPosts = await Astro.glob('../post/*.mdx');

	let tags = [];
	allPosts.forEach(function(post) {
		post.frontmatter.tags.forEach(function(tag) {
			tags.push(tag)
		})
	});

	const allTagsUnique = Array.from(new Set(tags));
	return allTagsUnique.map((tag) => ({ params: { tag: slugify(tag, {lower: true, strict: true})}, props: { allPosts: allPosts, fullTag: tag } }));
}

interface MarkdownFrontmatter {
	date: number;
	image: string;
	author: string;
	tags: Array<string>;
}

const { allPosts, fullTag } = Astro.props;
const { params, canonicalURL } = Astro;

/** filter posts by tag, sort by date */
const posts = allPosts.filter((post) => post.frontmatter.tags.includes(fullTag)).sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf());

const title = `All articles tagged with '${fullTag}' | ${SITE.title}`;
const description = `These are all the articles tagged with '${fullTag}'`;
---

<BaseLayout {title} {description} {canonicalURL}>
	<div class="flex items-center mb-10 justify-center">
		<h1 class="text-2xl sm:text-3xl text-center">Articles tagged with '{fullTag}'</h1>
	</div>

	<div class="space-y-12 sm:space-y-20">
		{posts.map((post) => <PostPreview post={post} author={authorData[post.frontmatter.author]} image={post.frontmatter.image} />)}
	</div>
</BaseLayout>