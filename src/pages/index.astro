---
import { SITE } from '../config';
import BaseLayout from '../layouts/BaseLayout.astro'
import PostPreview from '../components/PostPreview.astro';
import Pagination from '../components/Pagination.astro';
import authorData from '../data/authors.json';

interface MarkdownFrontmatter {
	date: number;
	image: string;
	author: string;
}

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = SITE.title;
let description = SITE.description;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Data Fetching: List all Markdown posts in the repo.
let allPosts = await Astro.glob('./post/*.mdx');
allPosts.sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf());
let firstPage = allPosts.slice(0, SITE.postsPerPage);
---

<BaseLayout {title} {description} image={allPosts[0].frontmatter.image} {canonicalURL}>
	<div class="space-y-12 sm:space-y-20">
		{firstPage.map((post) => <PostPreview post={post} image={post.frontmatter.image} author={authorData[post.frontmatter.author]} />)}
	</div>

	{allPosts.length > SITE.postsPerPage &&
		<Pagination prevUrl="/posts" nextUrl="/posts/2" />
	}
</BaseLayout>