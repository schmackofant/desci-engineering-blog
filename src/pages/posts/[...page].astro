---
import { SITE } from '../../config.ts';
import BaseLayout from '../../layouts/BaseLayout.astro';
import PostPreview from '../../components/PostPreview.astro';
import Pagination from '../../components/Pagination.astro';
import authorData from '../../data/authors.json';

export async function getStaticPaths({ paginate, rss }) {
	const allPosts = Astro.fetchContent<MarkdownFrontmatter>('../post/*.md');
	const sortedPosts = allPosts.sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf());

	// Generate an RSS feed from this collection of posts.
	// NOTE: This is disabled by default, since it requires `buildOptions.site` to be set in your "astro.config.mjs" file.
	//   rss({
	//     title: 'Don’s Blog',
	//     description: 'An example blog on Astro',
	//     customData: `<language>en-us</language>`,
	//     items: sortedPosts.map(item => ({
	//       title: item.title,
	//       description: item.description,
	//       link: item.url,
	//       pubDate: item.date,
	//     })),
	//   });

	// Return a paginated collection of paths for all posts
	return paginate(sortedPosts, { pageSize: SITE.postsPerPage });
}

const { page } = Astro.props;

// page
const title = `All posts (Page ${page.currentPage}) | ${SITE.title}`
let description = SITE.description;
let canonicalURL = Astro.request.canonicalURL;

// collection
interface MarkdownFrontmatter {
	date: number;
	image: string;
	author: string;
}
---

<BaseLayout {title} {description} image={page.data[0].image} {canonicalURL}>
	<h1 class="mt-8 sm:mt-12 mb-10 text-2xl sm:text-3xl text-center">
		All Articles
		<small class="text-gray-500">({page.start + 1}–{page.end + 1} of {page.total})</small>
	</h1>

	<div class="space-y-12 sm:space-y-20">
		{page.data.map((post) => <PostPreview post={post} image={post.image} author={authorData[post.author]} />)}
	</div>
	<Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
	<div class="pb-24"></div>
</BaseLayout>